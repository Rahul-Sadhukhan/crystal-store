spring.config.import=optional:file:/etc/secrets/crystal-pingfed-certificate.properties,optional:file:/etc/secrets/crystal-cerberus-key.properties,optional:file:/etc/secrets/crystal-service-user.properties

server.max-http-header-size=128KB

spring.data.rest.max-page-size=10000
spring.data.web.pageable.max-page-size=10000

management.endpoints.web.exposure.include=health,caches

store-review.asset-types=HVAC/L Executive Controller,Rack Controller,Rack,RACK,Refrigerated Case,case,Walk In - Cooler,Walk In - Freezer
service-registry.consumer-id=${serviceRegistry.consumerId}
service-registry.private-key=${serviceRegistry.privateKey}
service-registry.private-key-version=${serviceRegistry.privateKeyVersion}

store-review.scheduled.cron=0 0 12 * * *

memcached.cache.provider=static
memcached.cache.expiration=1d
memcached.cache.expiration-per-cache.usersByRole=5m
memcached.cache.expiration-per-cache.storeAssets=15m
memcached.cache.expiration-per-cache.storeHealthScores=30m
memcached.cache.expiration-per-cache.assetHealthScores=30m
memcached.cache.expiration-per-cache.storeHealthScoresPerpetual=30d
memcached.cache.expiration-per-cache.assetHealthScoresPerpetual=30d
memcached.cache.expiration-per-cache.storeDetailsInfo=30d
memcached.cache.expiration-per-cache.sdm=30d
memcached.cache.expiration-per-cache.rmaUsers=5m
memcached.cache.expiration-per-cache.soteriaPolicyLimits=15m
memcached.cache.metrics-cache-names=sdm,storeDetailsInfo,storeInfo,storeAssets,storeHealthScores,assetHealthScores,storeHealthScoresPerpetual,assetHealthScoresPerpetual,storeServiceModels,usersByRole,allUsersByRole,soteriaPolicyLimits,rmaUsers

metadata.asset-types.[HVAC/L\ Executive\ Controller]=controller
metadata.asset-types.[Rack\ Controller]=controller
metadata.asset-types.[Rack]=rack
metadata.asset-types.[rack]=rack
metadata.asset-types.[RACK]=rack
metadata.asset-types.[Refrigerated\ Case]=case
metadata.asset-types.[case]=case
metadata.asset-types.[Walk\ In\ -\ Cooler]=case
metadata.asset-types.[Walk\ In\ -\ Freezer]=case

server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-exception=true

spring.kafka.consumer.group-id=crystal-store-review-api

spring.application.name=crystal-store-review-api

spring.flyway.enabled=false
spring.flyway.baseline-version=0
spring.flyway.baseline-on-migrate=true

spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.maximumPoolSize=50

spring.sleuth.baggage.correlation-fields=x-request-id,wm_qos.correlation_id
spring.sleuth.baggage.remote-fields=x-request-id,wm_qos.correlation_id

management.health.circuitbreakers.enabled=true
management.health.endpoints.web.exposure.include=health
management.health.endpoint.health.show-details=always

resilience4j.retry.instances.healthMetrics.max-attempts=3
resilience4j.retry.instances.healthMetrics.waitDuration=1s
resilience4j.retry.instances.healthMetrics.enableExponentialBackoff=true
resilience4j.retry.instances.healthMetrics.exponentialBackoffMultiplier=2
resilience4j.retry.instances.healthMetrics.retry-exceptions[0]=javax.naming.ServiceUnavailableException
resilience4j.retry.instances.healthMetrics.retry-exceptions[1]=org.springframework.web.client.HttpServerErrorException
resilience4j.retry.instances.healthMetrics.retry-exceptions[2]=feign.RetryableException
resilience4j.retry.instances.healthMetrics.retry-exceptions[3]=feign.FeignException.ServiceUnavailable
resilience4j.retry.instances.healthMetrics.retry-exceptions[4]=java.net.ConnectException
resilience4j.retry.instances.healthMetrics.retry-exceptions[5]=java.net.SocketTimeoutException
resilience4j.retry.instances.healthMetrics.retry-exceptions[6]=feign.FeignException.GatewayTimeout
resilience4j.retry.instances.healthMetrics.retry-exceptions[7]=feign.FeignException.BadGateway

resilience4j.retry.instances.asset.max-attempts=3
resilience4j.retry.instances.asset.waitDuration=1s
resilience4j.retry.instances.asset.enableExponentialBackoff=true
resilience4j.retry.instances.asset.exponentialBackoffMultiplier=2
resilience4j.retry.instances.asset.retry-exceptions[0]=javax.naming.ServiceUnavailableException
resilience4j.retry.instances.asset.retry-exceptions[1]=org.springframework.web.client.HttpServerErrorException
resilience4j.retry.instances.asset.retry-exceptions[2]=feign.RetryableException
resilience4j.retry.instances.asset.retry-exceptions[3]=feign.FeignException.ServiceUnavailable
resilience4j.retry.instances.asset.retry-exceptions[4]=java.net.ConnectException
resilience4j.retry.instances.asset.retry-exceptions[5]=java.net.SocketTimeoutException
resilience4j.retry.instances.asset.retry-exceptions[6]=feign.FeignException.GatewayTimeout
resilience4j.retry.instances.asset.retry-exceptions[7]=feign.FeignException.BadGateway


resilience4j.retry.instances.estr.max-attempts=3
resilience4j.retry.instances.estr.waitDuration=1s
resilience4j.retry.instances.estr.enableExponentialBackoff=true
resilience4j.retry.instances.estr.exponentialBackoffMultiplier=2
resilience4j.retry.instances.estr.retry-exceptions[0]=javax.naming.ServiceUnavailableException
resilience4j.retry.instances.estr.retry-exceptions[1]=org.springframework.web.client.HttpServerErrorException
resilience4j.retry.instances.estr.retry-exceptions[2]=feign.RetryableException
resilience4j.retry.instances.estr.retry-exceptions[3]=feign.FeignException.ServiceUnavailable
resilience4j.retry.instances.estr.retry-exceptions[4]=java.net.ConnectException
resilience4j.retry.instances.estr.retry-exceptions[5]=java.net.SocketTimeoutException
resilience4j.retry.instances.estr.retry-exceptions[6]=feign.FeignException.GatewayTimeout
resilience4j.retry.instances.estr.retry-exceptions[7]=feign.FeignException.BadGateway

resilience4j.retry.instances.estr-bulk-fetch.max-attempts=3
resilience4j.retry.instances.estr-bulk-fetch.waitDuration=1s
resilience4j.retry.instances.estr-bulk-fetch.enableExponentialBackoff=true
resilience4j.retry.instances.estr-bulk-fetch.exponentialBackoffMultiplier=2

resilience4j.retry.instances.estr-update.max-attempts=3
resilience4j.retry.instances.estr-update.waitDuration=2s
resilience4j.retry.instances.estr-update.enableExponentialBackoff=true
resilience4j.retry.instances.estr-update.exponentialBackoffMultiplier=2

resilience4j.retry.instances.store-review.max-attempts=3
resilience4j.retry.instances.store-review.waitDuration=2s
resilience4j.retry.instances.store-review.enableExponentialBackoff=true
resilience4j.retry.instances.store-review.exponentialBackoffMultiplier=2

resilience4j.retry.instances.snapshot.max-attempts=3
resilience4j.retry.instances.snapshot.waitDuration=2s
resilience4j.retry.instances.snapshot.enableExponentialBackoff=true
resilience4j.retry.instances.snapshot.exponentialBackoffMultiplier=2
